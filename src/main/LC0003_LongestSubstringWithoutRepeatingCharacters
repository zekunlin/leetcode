class Solution {
    public int lengthOfLongestSubstring(String s) {
        int maxLen = 0;
        int sLen = s.length();
        int left = 0;
        int right = 0;
        //Set set = new HashSet<>(); //for sol1 and sol2
        Map<Character, Integer> map = new HashMap<>();
        while (right < sLen){
            
            /*
            sol1.
            if (!set.contains(s.charAt(right))){
                set.add(s.charAt(right));
                maxLen = Math.max(maxLen, set.size());
                right++;
            }
            else{
                set.remove(s.charAt(left++));
            }
            */

            /*
            sol2.
            while(!set.add(s.charAt(right))){
                set.remove(s.charAt(left++));
            }
            maxLen = Math.max(maxLen, set.size());
            right++;
            */
            /* sol3*/
            if (map.containsKey(s.charAt(right))){
                left = Math.max(map.get(s.charAt(right)), left);
            }

            maxLen = Math.max(maxLen, right - left + 1);
            map.put(s.charAt(right), right+1);
            right++;
        }
        return maxLen;
    }
}
